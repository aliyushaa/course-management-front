import React from "react";
import {useFieldArray, useForm} from "react-hook-form";
import {moduleService} from "../../services/module.service";
import {ICreateModule} from "../../types/module.types";

interface CreateModuleFormProps {
    onClose: () => void
    courseId: number
}

export function CreateModuleForm({onClose, courseId}: CreateModuleFormProps) {
    const {register, handleSubmit, formState: {errors}, reset, control} = useForm<ICreateModule>({
        mode: 'onChange'
    });

    const {fields, append, remove} = useFieldArray({
        control,
        name: "attachments"
    });

    const onSubmit = async (data: ICreateModule) => {
        try {
            const response = await moduleService.create(data, courseId);
            reset();
            onClose();
            window.location.reload();
        } catch (error) {
            console.error('Failed to create module:', error);
        }
    };

    return (
        <form onSubmit={handleSubmit(onSubmit)}>
            <input
                type="text"
                className="border py-2 px-4 mt-4 w-full outline-0"
                placeholder="Title"
                {...register('title', {
                    required: 'Fill in the title'
                })}
            />
            {errors.title && (
                <div className="text-red-600 text-sm">{errors.title.message}</div>
            )}

            {fields.map((field, index) => (
                <div key={field.id} className="mt-4">
                    <select
                        className="border py-2 px-4 mt-2 w-full outline-0 rounded"
                        {...register(`attachments.${index}.attachmentType`, {
                            required: 'Select attachment type'
                        })}
                    >
                        <option className="text-gray-400 opacity-75" value="">Select attachment type</option>
                        <option value="TEXT">Text</option>
                        <option value="FILE">File</option>
                        {/*<option value="DOCUMENT">Document</option>*/}
                    </select>

                    <input
                        type="text"
                        className="border py-2 px-4 mt-2 w-full outline-0"
                        placeholder="Attachment Text"
                        {...register(`attachments.${index}.attachmentText`, {
                            required: 'Fill in the attachment text'
                        })}
                    />
                    <button type="button" className="py-2 px-4 mt-2 bg-red-500 text-white rounded hover:bg-red-600"
                            onClick={() => remove(index)}>
                        Remove Attachment
                    </button>
                </div>
            ))}
            <button type="button" className="py-2 px-4 mt-2 bg-blue-400 text-white rounded hover:bg-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-opacity-50"
                    onClick={() => append({attachmentType: '', attachmentText: ''})}>
                Add Attachment
            </button>

            <div className="flex justify-center mt-4">
                <button type="submit" className="py-2 bg-green-500 hover:bg-green-700 text-white px-4 border">
                    Create
                </button>
            </div>
        </form>
    );
}
